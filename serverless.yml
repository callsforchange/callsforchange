service: tfp52calls52weeks
provider:
  name: aws
  runtime: nodejs4.3
  cfLogs: true
  # Prod deploys to us-west-2
  region: us-east-1
  stage: dev

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
    - Effect: "Allow"
      Action:
        - "SNS:Publish"
      Resource: "arn:aws:sns:${self:provider.region}:*:refresh-users"
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "arn:aws:lambda:${self:provider.region}:*:function:${self:service}-${opt:stage}-notify-user"
# TODO(jon): Explore ETL'ing of http://www.senate.gov/general/contact_information/senators_cfm.xml
#            to local storage?
#     - Effect: "Allow"
#       Action:
#         - "SNS:Publish"
#       Resource: "arn:aws:sns:${self:provider.region}:*:refresh-senators"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  schedule-fanout:
    handler: functions/schedule_fanout.handler
    environment:
      SUBMIT_USER_FUNCTION_NAME: ${self:service}-${opt:stage}-notify-user
    events:
      - schedule: cron(0/15 * * * ? *)
  notify-user:
    handler: functions/notify_user.handler
  robots:
    handler: functions/robots.handler
    events:
      - http:
          path: robots.txt
          method: get
  submit-user:
    handler: functions/submit_user.handler
    environment:
      GOOGLE_API: ${env:GOOGLE_API}
      MAILCHIMP_API: ${env:MAILCHIMP_API}
      MAILCHIMP_LIST_ID: ${env:MAILCHIMP_LIST_ID}
    events:
      - http:
          integration: lambda
          path: users/register
          method: post
          cors: true
  mc-subscribe:
    handler: functions/mc-subscribe.handler
  mc-unsubscribe:
    handler: functions/mc-unsubscribe.handler
  mc-summary:
    handler: functions/mc-summary.handler
  noreply:
    handler: functions/echo.handler

# resources:
#   Resources:
#     usersTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: 52calls-52weeks-users
#         KeySchema:
#           - AttributeName: id
#             KeyType: HASH
#         AttributeDefinitions:
#           - AttributeName: id
#             AttributeType: S
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
# 
#     scheduleTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: 52calls-52weeks-schedule
#         # DeletionPolicy: Retain
#         KeySchema:
#           - AttributeName: id
#             KeyType: HASH
#         AttributeDefinitions:
#           - AttributeName: id
#             AttributeType: S
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
