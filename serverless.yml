service: tfp52calls52weeks
provider:
  name: aws
  runtime: nodejs4.3
  cfLogs: true
  # Prod deploys to us-west-2
  region: us-east-1
  stage: dev

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
    - Effect: "Allow"
      Action:
        - "SNS:Publish"
      Resource: "arn:aws:sns:${self:provider.region}:*:refresh-users"
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "arn:aws:lambda:${self:provider.region}:*:function:${self:service}-${opt:stage}-notify-user"

  environment:
    STAGE: ${opt:stage}
    GOOGLE_API: ${env:GOOGLE_API}
    MAILCHIMP_API: ${env:MAILCHIMP_API}
    MAILCHIMP_LIST_ID: ${env:MAILCHIMP_LIST_ID}

functions:
# =--= MIGRATION AND MISC. OPERATIONAL SCRIPTS =-----------------------------------------=
  migrate:
    handler: functions/migrate.handler

  robots:
    handler: functions/robots.handler
    events:
      - http:
          path: robots.txt
          method: get

# =--= OUTREACH =------------------------------------------------------------------------=
  schedule-fanout:
    handler: functions/schedule_fanout.handler
    environment:
      SUBMIT_USER_FUNCTION_NAME: ${self:service}-${opt:stage}-notify-user
    events:
      - schedule: cron(0/15 * * * ? *)
  notify-user:
    handler: functions/notify_user.handler

# =--= REGISTRATION AND USER MANAGEMENT =------------------------------------------------=
  submit-user:
    handler: functions/submit_user.handler
    events:
      - http:
          integration: lambda
          path: users/register
          method: post
          cors: true

  mc-subscribe:
    handler: functions/mc-subscribe.handler
    events:
      - http:
          integration: lambda
          path: mailchimp/hook/subscribe
          method: get
          cors: true
      - http:
          integration: lambda
          path: mailchimp/hook/subscribe
          method: post
          cors: true
  mc-unsubscribe:
    handler: functions/mc-unsubscribe.handler
    events:
      - http:
          path: mailchimp/hook/unsubscribe
          integration: lambda
          method: get
          cors: true
      - http:
          path: mailchimp/hook/unsubscribe
          integration: lambda
          method: post
          cors: true

# =--= MISC. AWS RESOURCES =-------------------------------------------------------------=

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: district
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: district
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    repsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: representatives
        KeySchema:
          - AttributeName: district
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: district
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

#     scheduleTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: 52calls-52weeks-schedule
#         # DeletionPolicy: Retain
#         KeySchema:
#           - AttributeName: id
#             KeyType: HASH
#         AttributeDefinitions:
#           - AttributeName: id
#             AttributeType: S
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5
